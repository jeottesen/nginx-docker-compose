version: "3.8"

secrets:
    token:
        file: token.txt

services:
    nginx:
        image: nginx
        container_name: nginx
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - '~/docker/containers/nginx/html:/etc/nginx/html'
            - '~/docker/containers/nginx/config:/etc/nginx'
            - '~/docker/containers/certbot/conf:/etc/letsencrypt'
            - '~/docker/containers/certbot/www:/var/www/certbot'
        logging:
            options:
                max-size: 1m
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        networks:
            - servers


    grafana:
        image: grafana/grafana
        container_name: grafana
        user: ${PUID}
        restart: always
        volumes:
            - '~/docker/containers/grafana/config/grafana.ini:/etc/grafana/grafana.ini'
            - '~/docker/containers/grafana/data:/var/lib/grafana/data'
        networks:
            - servers

    influxdb:
        image: influxdb
        container_name: influxdb
        restart: always
        volumes:
            - '~/docker/containers/influxdb:/var/lib/influxdb'
        networks:
            - servers

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - '~/docker/containers/certbot/conf:/etc/letsencrypt'
            - '~/docker/containers/certbot/www:/var/www/certbot'
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        networks:
            - isolated

    duckdns:
        image: linuxserver/duckdns
        container_name: duckdns
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - SUBDOMAINS=${SUBDOMAINS}
            - FILE__TOKEN=/run/secrets/token
        restart: unless-stopped
        secrets:
            - token
        networks:
            - isolated

networks:
    servers:
        # Containers part of the reverse proxy system
        driver: bridge
    isolated:
        # Containers not part of the reverse proxy system
        driver: bridge
